generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id       String @id
  username String @unique
}

model Student {
  id          String       @id
  username    String       @unique
  name        String
  surname     String
  email       String?      @unique
  phone       String?      @unique
  address     String
  sex         UserSex
  img         String?
  bloodType   String
  createAt    DateTime     @default(now())
  parentId    String
  parent      Parent       @relation(fields: [parentId], references: [id])
  classId     Int
  class       Class        @relation(fields: [classId], references: [id])
  gradeId     Int
  grade       Grade        @relation(fields: [gradeId], references: [id])
  attemdances Attemdance[]
  result      Result[] //
  birthday    DateTime
}

model Parent {
  id       String    @id
  username String    @unique
  name     String
  surname  String
  email    String?   @unique
  phone    String?   @unique
  address  String
  createAt DateTime  @default(now())
  Student  Student[] //
}

model Teacher {
  id        String    @id
  username  String    @unique
  name      String
  surname   String
  email     String?   @unique
  phone     String?   @unique
  address   String
  img       String?
  bloodType String
  sex       UserSex
  createAt  DateTime  @default(now())
  subjects  Subject[]
  lessons   Lesson[]
  classes   Class[]
  birthday  DateTime
}

model Subject {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  teachers Teacher[]
  lessons  Lesson[]
}

model Lesson {
  id        Int      @id @default(autoincrement())
  name      String
  day       Day
  startTime DateTime
  endTime   DateTime

  Teacher     Teacher?     @relation(fields: [teacherId], references: [id])
  teacherId   String?
  Class       Class?       @relation(fields: [classId], references: [id])
  classId     Int?
  Subject     Subject?     @relation(fields: [subjectId], references: [id])
  subjectId   Int?
  exams       Exam[]
  assignments Assignment[]
  attendances Attemdance[]
}

model Class {
  id       Int    @id @default(autoincrement())
  name     String @unique
  capacity Int

  supervisorId String?
  supervisor   Teacher?      @relation(fields: [supervisorId], references: [id])
  lessons      Lesson[]
  Student      Student[]
  Grade        Grade?        @relation(fields: [gradeId], references: [id])
  gradeId      Int?
  events       Event[]
  anouncements Anouncement[]
}

model Grade {
  id    Int @id @default(autoincrement())
  level Int @unique

  classes Class[]
  Student Student[]
}

model Attemdance {
  id      Int      @id @default(autoincrement())
  date    DateTime
  present Boolean

  Student   Student? @relation(fields: [studentId], references: [id])
  studentId String?
  Lesson    Lesson?  @relation(fields: [lessonId], references: [id])
  lessonId  Int?
}

model Result {
  id    Int @id @default(autoincrement())
  score Int

  studentId    String
  Student      Student     @relation(fields: [studentId], references: [id])
  Assignment   Assignment? @relation(fields: [assignmentId], references: [id])
  assignmentId Int?
  Exam         Exam?       @relation(fields: [examId], references: [id])
  examId       Int?
}

model Event {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  startTime   DateTime
  endTime     DateTime
  Class       Class?   @relation(fields: [classId], references: [id])
  classId     Int?
}

model Anouncement {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  date        DateTime
  Class       Class?   @relation(fields: [classId], references: [id])
  classId     Int?
}

model Assignment {
  id        Int      @id @default(autoincrement())
  title     String
  startDate DateTime
  dueDate   DateTime

  lessonId Int
  Lesson   Lesson   @relation(fields: [lessonId], references: [id])
  result   Result[]
}

model Exam {
  id        Int      @id @default(autoincrement())
  title     String
  startTime DateTime
  endTime   DateTime

  Lesson   Lesson?  @relation(fields: [lessonId], references: [id])
  lessonId Int?
  result   Result[]
}

enum UserSex {
  MALE
  FEMALE
}

enum Day {
  MONDAY
  TUESDAY
  WEDNESSDAY
  THURSDAY
  FRIDAY
}
